% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_themes.R
\name{theme_tueb_2}
\alias{theme_tueb_2}
\title{Alternative theme (for ggplot2)}
\usage{
theme_tueb_2(
  discrete = TRUE,
  col_title = uni_tuebingen_2[[1]],
  base_size = 11,
  base_family = "",
  base_line_size = base_size/22,
  base_rect_size = base_size/22
)
}
\arguments{
\item{discrete}{A boolean.
* `TRUE` (the default): discrete case.
* `FALSE`: continuous case.}

\item{col_title}{Color of title (text) elements (optional, numeric).
Default: \code{col_title = grey(0, 1)} (i.e., "black").}

\item{base_size}{Base font size (optional, numeric).
Default: \code{base_size = 11}.}

\item{base_family}{Base font family (optional, character).
Default: \code{base_family = ""}.
Options include \code{"mono"}, \code{"sans"} (default), and "serif".}

\item{base_line_size}{Base line size (optional, numeric).
Default: \code{base_line_size = base_size/22}.}

\item{base_rect_size}{Base rectangle size (optional, numeric).
Default: \code{base_rect_size = base_size/22}.}
}
\description{
\code{theme_tueb_2} provides an alternative \bold{Uni Tuebingen} theme
to use in \bold{ggplot2} commands.
}
\details{
\code{theme_tueb_2} is no-nonsense, but fills
panel backgrounds in "grau" (specifically, pal_seeggrau[[1]]).

This theme works well for dark colors and bright color accents,
but is of limited use with transparent colors.
}
\examples{

\donttest{
  # Plotting iris dataset (using ggplot2, theme_tueb_1, and unikn colors):

  library('ggplot2')  # theme_tueb_1 requires ggplot2

    n <- 12
    groups <- 1:n
    df <- data.frame()
    set.seed(3)

    for (i in seq(1:30)){
        data = data.frame(matrix(0, n, 3))
        data[, 1] <- i
        data[, 2] <- sample(groups, nrow(data))
        data[, 3] <- prop.table(sample(c(rep(0, 100), c(1:n)), nrow(data)))
        df = rbind(df, data)}

    names(df) <- c("X","Group","Y")
    df$Group <- as.factor(df$Group)

    df <- df[c(2, 1, 3)]
    df <- df[order(df$X, df$Group) , ]
    rownames(df) <- NULL
    my_data <- df

    ggplot(my_data, aes(x = X, y = Y, fill = Group)) +
        geom_area() +
        theme_tueb_2() +
        theme(legend.position = "none")
}

}
\seealso{
\code{\link{theme_tueb_1}} for an alternative theme.

Other plot functions: 
\code{\link{slide}()},
\code{\link{theme_grau}()},
\code{\link{theme_tueb_1_cont}()},
\code{\link{theme_tueb_1_disc}()},
\code{\link{theme_tueb_1}()},
\code{\link{theme_tueb_2_cont}()},
\code{\link{theme_tueb_2_disc}()},
\code{\link{theme_unikn}()},
\code{\link{xbox}()}
}
\concept{plot functions}
